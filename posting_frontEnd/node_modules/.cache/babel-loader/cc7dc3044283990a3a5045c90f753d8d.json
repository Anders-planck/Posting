{"ast":null,"code":"import _slicedToArray from \"/Users/anders/Desktop/work/Vue/Posting-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/anders/Desktop/work/Vue/Posting-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { HTTP } from '@/services/axios.js';\n\nvar newPost = function newPost() {\n  return {\n    online: false,\n    liked: 0,\n    user: {\n      name: 'Planck Anders',\n      image_url: 'https://images.unsplash.com/photo-1523380360198-653413ad178b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTR8fHZpb2xldHxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60'\n    },\n    title: '',\n    description: '',\n    images: [],\n    tags: []\n  };\n};\n\nvar registerPost = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(data) {\n    var accessInfo, formData;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(data);\n            accessInfo = localStorage.getItem('accessInfo');\n\n            if (!(accessInfo != 'undefined' && accessInfo != null)) {\n              _context.next = 8;\n              break;\n            }\n\n            accessInfo = JSON.parse(accessInfo);\n            formData = new FormData();\n            Object.entries(data.Post).forEach(function (_ref2) {\n              var _ref3 = _slicedToArray(_ref2, 2),\n                  key = _ref3[0],\n                  value = _ref3[1];\n\n              return formData.append(key, value);\n            });\n            _context.next = 8;\n            return HTTP.post('posts', formData, {\n              headers: {\n                'Authorization': 'Bearer ' + accessInfo.token,\n                'Content-Type': \"multipart/form-data\"\n              }\n            }).then(function (response) {\n              if (data.tags.length > 0) {\n                data.tags.forEach(function (tag) {\n                  formData = new FormData();\n                  Object.entries(tag).forEach(function (_ref4) {\n                    var _ref5 = _slicedToArray(_ref4, 2),\n                        key = _ref5[0],\n                        value = _ref5[1];\n\n                    return formData.append(key, value);\n                  });\n                  HTTP.post('posts/' + response.data.id + '/tags', formData, {\n                    headers: {\n                      'Authorization': 'Bearer ' + accessInfo.token,\n                      'Content-Type': \"multipart/form-data\"\n                    }\n                  }).then(function (response) {\n                    console.log(response.data);\n                  }).catch(function (error) {\n                    console.log(error);\n                  });\n                });\n              }\n\n              if (data.images.length > 0) {\n                data.images.forEach(function (image) {\n                  formData = new FormData();\n                  var req = {\n                    image: image,\n                    size: image.size,\n                    name: image.name\n                  };\n                  Object.entries(req).forEach(function (_ref6) {\n                    var _ref7 = _slicedToArray(_ref6, 2),\n                        key = _ref7[0],\n                        value = _ref7[1];\n\n                    return formData.append(key, value);\n                  });\n                  HTTP.post('posts/' + response.data.id + '/images', formData, {\n                    headers: {\n                      'Authorization': 'Bearer ' + accessInfo.token,\n                      'Content-Type': \"multipart/form-data\"\n                    }\n                  }).then(function (response) {\n                    console.log(response.data);\n                  }).catch(function (error) {\n                    console.log(error);\n                  });\n                });\n              }\n            }).catch(function (error) {\n              console.log(error);\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function registerPost(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar GetAllPosts = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var user;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            user = localStorage.getItem('accessInfo');\n\n            if (!(user != 'undefined' && user != null)) {\n              _context2.next = 5;\n              break;\n            }\n\n            user = JSON.parse(user);\n            _context2.next = 5;\n            return HTTP.get('posts', {\n              headers: {\n                'Authorization': 'Bearer ' + user.token\n              }\n            }).then(function (response) {\n              localStorage.setItem('Posts', JSON.stringify(response.data));\n            }).catch(function (error) {\n              console.log(error);\n            });\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function GetAllPosts() {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nvar allPosts = function allPosts() {\n  GetAllPosts();\n  var posts = localStorage.getItem('Posts');\n\n  if (posts != 'undefined' && posts != null) {\n    return JSON.parse(posts);\n  }\n\n  return [];\n};\n\nexport { newPost, allPosts, registerPost };","map":{"version":3,"sources":["/Users/anders/Desktop/work/Vue/Posting-app/src/services/PostsServices.js"],"names":["HTTP","newPost","online","liked","user","name","image_url","title","description","images","tags","registerPost","data","console","log","accessInfo","localStorage","getItem","JSON","parse","formData","FormData","Object","entries","Post","forEach","key","value","append","post","headers","token","then","response","length","tag","id","catch","error","image","req","size","GetAllPosts","get","setItem","stringify","allPosts","posts"],"mappings":"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","sourcesContent":["import {HTTP} from '@/services/axios.js'\n\nconst newPost = function () {\n  return {\n    online: false,\n    liked:0,\n    user: {\n      name: 'Planck Anders',\n      image_url: 'https://images.unsplash.com/photo-1523380360198-653413ad178b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTR8fHZpb2xldHxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60',\n    },\n    title: '',\n    description: '',\n    images: [],\n    tags:[],\n  }\n}\n\n\nconst registerPost = async function (data) {\n  console.log(data)\n  let accessInfo = localStorage.getItem('accessInfo')\n  if (accessInfo != 'undefined' && accessInfo != null) {\n    accessInfo = JSON.parse(accessInfo)\n    let formData = new FormData()\n    Object.entries(data.Post).forEach(\n      ([key, value]) => formData.append(key, value)\n    )\n    await HTTP.post('posts', formData, {\n        headers: {\n          'Authorization': 'Bearer ' + accessInfo.token,\n          'Content-Type': \"multipart/form-data\",\n        }\n      })\n      .then(response => {\n        if(data.tags.length>0){\n          data.tags.forEach(tag =>{\n            formData = new FormData()\n            Object.entries(tag).forEach(\n              ([key, value]) => formData.append(key, value)\n            )\n            HTTP.post('posts/'+response.data.id+'/tags',formData,{\n              headers: {\n                'Authorization': 'Bearer ' + accessInfo.token,\n                'Content-Type': \"multipart/form-data\",\n              }\n            })\n            .then(response => {\n              console.log(response.data)\n            })\n            .catch(error => {\n              console.log(error)\n            })\n          })\n        }\n\n        if(data.images.length>0){\n          data.images.forEach(image =>{\n            formData = new FormData()\n            const req={\n              image: image,\n              size: image.size,\n              name: image.name\n            }\n            Object.entries(req).forEach(\n              ([key, value]) => formData.append(key, value)\n            )\n            HTTP.post('posts/'+response.data.id+'/images',formData,{\n              headers: {\n                'Authorization': 'Bearer ' + accessInfo.token,\n                'Content-Type': \"multipart/form-data\",\n              }\n            })\n            .then(response => {\n              console.log(response.data)\n            })\n            .catch(error => {\n              console.log(error)\n            })\n          })\n        }\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n      \n  }\n}\n\nconst GetAllPosts = async function () {\n  let user = localStorage.getItem('accessInfo')\n  \n  if (user!='undefined' && user!=null) {\n    user=JSON.parse(user)\n    await HTTP.get('posts',{\n      headers:{\n        'Authorization': 'Bearer ' + user.token,\n      }\n    })\n    .then( response => {\n      localStorage.setItem('Posts',JSON.stringify(response.data))\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }\n\n}\n\nconst allPosts = function(){\n  GetAllPosts()\n  let posts= localStorage.getItem('Posts')\n  if(posts!='undefined' && posts!=null) {\n    return JSON.parse(posts)\n  }\n  return []\n}\n\nexport {\n  newPost,\n  allPosts,\n  registerPost,\n}"]},"metadata":{},"sourceType":"module"}