{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, minLength, numeric, maxLength, alphaNum, email, sameAs } from 'vuelidate/lib/validators';\nexport default {\n  name: \"Form\",\n  props: {\n    status: {\n      type: String,\n      require: true,\n      default: \"login\"\n    }\n  },\n  data: function data() {\n    return {\n      numero: '',\n      email: '',\n      username: '',\n      password: '',\n      password_confirmation: ''\n    };\n  },\n  validations: {\n    numero: {\n      required: required,\n      numeric: numeric\n    },\n    email: email,\n    username: {\n      minLength: minLength(5),\n      maxLength: maxLength(20)\n    },\n    password: alphaNum,\n    password_confirmation: sameAs(function () {\n      return this.password;\n    })\n  },\n  methods: {\n    submit: function submit() {\n      console.log(this.$v);\n    }\n  }\n};","map":{"version":3,"sources":["Form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,SACA,QADA,EAEA,SAFA,EAGA,OAHA,EAIA,SAJA,EAKA,QALA,EAMA,KANA,EAOA,MAPA,QAQA,0BARA;AASA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA;AAHA;AADA,GAFA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,EAJA;AAKA,MAAA,qBAAA,EAAA;AALA,KAAA;AAOA,GAjBA;AAkBA,EAAA,WAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,KAAA,EAAA,KALA;AAMA,IAAA,QAAA,EAAA;AACA,MAAA,SAAA,EAAA,SAAA,CAAA,CAAA,CADA;AAEA,MAAA,SAAA,EAAA,SAAA,CAAA,EAAA;AAFA,KANA;AAUA,IAAA,QAAA,EAAA,QAVA;AAWA,IAAA,qBAAA,EAAA,MAAA,CAAA,YAAA;AACA,aAAA,KAAA,QAAA;AACA,KAFA;AAXA,GAlBA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,EAAA;AACA;AAHA;AAjCA,CAAA","sourcesContent":["<template>\n    <div class=\"contentForm\">\n        <div class=\"title\">\n\n        </div>\n        <form class=\"form\" @submit.prevent=\"submit\">\n            <input type=\"tel\" name=\"numero\" class=\"input\" v-model=\"numero\" placeholder=\"telephone number\">\n            <input type=\"text\" name=\"username\" class=\"input\" v-model=\"username\" placeholder=\"User name\">\n            <input type=\"email\" name=\"email\" class=\"input\" v-model=\"email\" placeholder=\"email\">\n            <input type=\"password\" name=\"password\" class=\"input\" v-model=\"password\" placeholder=\"password\">\n            <input type=\"password\" name=\"password_confermation\" v-model=\"password_confirmation\" class=\"input\"\n                placeholder=\"confirm your password\" v-if=\"status=='register'\">\n            <button type=\"submit\" class=\"btn_submit\">Inscriviti</button>\n        </form>\n    </div>\n</template>\n\n<script>\n    import {\n        required,\n        minLength,\n        numeric,\n        maxLength,\n        alphaNum,\n        email,\n        sameAs\n    } from 'vuelidate/lib/validators'\n    export default {\n        name: \"Form\",\n        props: {\n            status: {\n                type: String,\n                require: true,\n                default: \"login\"\n            }\n        },\n        data() {\n            return {\n                numero: '',\n                email: '',\n                username: '',\n                password: '',\n                password_confirmation: ''\n            }\n        },\n        validations: {\n            numero: {\n                required,\n                numeric\n            },\n            email: email,\n            username: {\n                minLength: minLength(5),\n                maxLength: maxLength(20)\n            },\n            password: alphaNum,\n            password_confirmation: sameAs(function () {\n                return this.password\n            })\n        },\n        methods: {\n            submit() {\n                console.log(this.$v)\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n.contentForm{\n    width: 300px !important;\n    .form {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        width: 100%;\n        .input {\n            display: block;\n            outline: none;\n            margin-top: 1rem;\n            border: 1px solid #d1d8e0;\n            border-radius: 5px;\n            padding: 5px 7px;\n            width: 100%;\n            min-width: auto;\n            font-family: 'Lato', sans-serif;\n            font-weight: bolder;\n\n\n\n            &::placeholder {\n                color: #000;\n                font-weight: bold;\n                font-family: 'Lato', sans-serif;\n                text-transform: capitalize;\n            }\n\n            &:first-child {\n                margin-top: 0 !important;\n            }\n        }\n\n        .btn_submit {\n            padding: 3px 5px;\n            margin-top: 1rem;\n            width: 100%;\n            color: #fff;\n            border: 1px solid #d1d8e0;\n            border-radius: 5px;\n            font-family: 'Lato', sans-serif;\n            font-weight: bold;\n            font-size: 1.2rem;\n            background: #3498db;\n        }\n    }\n}\n</style>"],"sourceRoot":"src/components/connection"},"metadata":{},"sourceType":"module"}