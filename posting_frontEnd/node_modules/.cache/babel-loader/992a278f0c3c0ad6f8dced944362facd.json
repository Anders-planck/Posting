{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ImageView from '@/components/Posts/ImageView';\nimport PostDescription from '@/components/Posts/PostDescription';\nimport PostTitle from '@/components/Posts/PostTitle';\nimport PostFooter from '@/components/Posts/PostFooter';\nimport PostAuthorInfo from '@/components/Posts/PostAuthorInfo';\nimport PostComment from '@/components/Posts/PostComment';\nimport SendIcon from '@/components/Icons/SendIcon';\nimport moment from 'moment';\nimport axios from \"axios\";\nexport default {\n  name: 'Post',\n  props: {\n    post: {\n      type: Object,\n      require: true\n    },\n    state: {\n      type: String,\n      require: false,\n      default: 'view'\n    }\n  },\n  components: {\n    ImageView: ImageView,\n    PostDescription: PostDescription,\n    PostTitle: PostTitle,\n    PostFooter: PostFooter,\n    PostAuthorInfo: PostAuthorInfo,\n    PostComment: PostComment,\n    SendIcon: SendIcon\n  },\n  created: function created() {\n    var _this = this;\n\n    axios.interceptors.request.use(function (config) {\n      _this.setLoading(true);\n\n      _this.config = config;\n      return config;\n    }, function (error) {\n      _this.setLoading(false);\n\n      return Promise.reject(error);\n    });\n    axios.interceptors.response.use(function (response) {\n      _this.setLoading(false);\n\n      _this.res = response;\n      return response;\n    }, function (error) {\n      _this.setLoading(false);\n\n      return Promise.reject(error);\n    });\n  },\n  data: function data() {\n    return {\n      placeholder: 'write your comment here :) ...',\n      comment: '',\n      showAreaComment: false,\n      refCount: 0,\n      isLoading: false,\n      config: null,\n      res: null\n    };\n  },\n  computed: {\n    dateOfPost: function dateOfPost() {\n      return moment(this.post.created_at).format('DD-MM-YY, hh:mm');\n    },\n    isAuthors: function isAuthors(comment) {\n      console.log(this.$store.getters.getCurrentUser.id);\n      if (comment.user.id == this.$store.getters.getCurrentUser.id) return 'comment isUser';else return 'comment';\n    }\n  },\n  methods: {\n    toogleAreaComment: function toogleAreaComment() {\n      this.showAreaComment = !this.showAreaComment;\n    },\n    addComment: function addComment() {\n      var data = {\n        post_id: this.post.id,\n        body: this.comment\n      };\n      this.comment = '';\n      this.$store.commit('setCommentPost', data);\n    }\n  }\n};","map":{"version":3,"sources":["Post.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"post\">\n        <ImageView  state=\"list\" v-if=\"post.images.length>0 && state!='create'\" :image=\"post\" :images=\"post.images\" />\n        <div class=\"p-2\">\n            <div class=\"info\">\n                <PostAuthorInfo :post=\"post\" />\n            </div>\n\n            <div class=\"info\">\n                <PostTitle v-if=\"post.title\" :title=\"post.title\" />\n                <PostDescription :state=\"state\" :description=\"post.description\" />\n            </div>\n\n            <div v-if=\"state!='create'\" class=\"footer\">\n                <PostFooter :reply=\"post.comments\" :at=\"dateOfPost\" :like=\"post.liked\"\n                    @toogleStateComments=\"toogleAreaComment\" />\n            </div>\n        </div>\n        <transition name=\"commentArea\" appear\n            enter-active-class=\"animate__animated animate__fadeInDown animate__bouncIn\"\n            leave-active-class=\"animate__animated animate__bounceOut\">\n            <div class=\"comments\" v-if=\"showAreaComment\">\n                <div class=\"listPostComment\">\n                    \n                    <PostComment  v-for=\"(comment,index) in post.comments\" :class=\"isAuthors(comment)\" :comment=\"comment\"\n                        :key=\"index\" />\n                </div>\n                <form @submit.prevent=\"addComment\" class=\"form\">\n                    <input class=\"textarea\" type=\"text\" v-model=\"comment\" :placeholder=\"placeholder\" />\n                    <button class=\"Send\">\n                        <SendIcon size=\"15px\" />\n                    </button>\n                </form>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<script>\nimport ImageView from '@/components/Posts/ImageView'\nimport PostDescription from  '@/components/Posts/PostDescription'\nimport PostTitle from '@/components/Posts/PostTitle'\nimport PostFooter from '@/components/Posts/PostFooter'\nimport PostAuthorInfo from '@/components/Posts/PostAuthorInfo'\nimport PostComment from '@/components/Posts/PostComment'\nimport SendIcon from '@/components/Icons/SendIcon'\nimport moment from 'moment'\nimport axios from \"axios\"\nexport default {\n    name:'Post',\n    props:{\n        post:{\n            type:Object,\n            require:true\n        },\n        state:{\n            type:String,\n            require:false,\n            default:'view'\n        }\n    },\n    components:{\n        ImageView,\n        PostDescription,\n        PostTitle,\n        PostFooter,\n        PostAuthorInfo,\n        PostComment,\n        SendIcon\n    },\n  created() {\n    axios.interceptors.request.use(\n      (config) => {\n        this.setLoading(true);\n        this.config = config;\n        return config;\n      },\n      (error) => {\n        this.setLoading(false);\n        return Promise.reject(error);\n      }\n    );\n\n    axios.interceptors.response.use(\n      (response) => {\n        this.setLoading(false);\n        this.res = response;\n        return response;\n      },\n      (error) => {\n        this.setLoading(false);\n        return Promise.reject(error);\n      }\n    );\n  },\n    data(){\n        return{\n            placeholder:'write your comment here :) ...',\n            comment:'',\n            showAreaComment:false,\n            refCount: 0,\n            isLoading: false,\n            config: null,\n            res: null,\n        }\n    },\n    computed:{\n        dateOfPost(){\n            return moment(this.post.created_at).format('DD-MM-YY, hh:mm')\n        },\n        isAuthors(comment){\n            console.log(this.$store.getters.getCurrentUser.id)\n            if(comment.user.id==this.$store.getters.getCurrentUser.id) return 'comment isUser'\n            else return 'comment'\n        }\n    },\n    methods:{\n        toogleAreaComment(){\n            this.showAreaComment=!this.showAreaComment\n        },\n        addComment(){\n            const data = {\n                post_id:this.post.id,\n                body:this.comment,\n            }\n            this.comment=''\n            this.$store.commit('setCommentPost',data);\n        }\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n    .post{\n        margin-top: 2rem;\n        padding-bottom: 0 !important;/* \n        box-shadow: 3px 8px 34px 2px rgba(44, 62, 80, 0.080); */\n        border-radius:5px;\n        display: flex;\n        flex-direction: column;\n        border: 1px solid #d1d8e0;\n\n\n        .info{\n            margin-top:0.5rem ;\n            padding:0.1rem;\n            &:first-child{\n                padding: 1rem;\n            }\n        }\n\n        .footer{\n            height: 35px;\n            padding: 2px;\n        }\n\n        .comments{\n            border: 1px solid rgba(7, 7, 7, 0.116);\n            border-radius: 5px;\n            max-height: 300px;\n            min-height: 80px;\n            overflow: hidden;\n            width: 100%;\n            margin-top: 30px;\n\n\n            .listPostComment{\n                width: 100%;\n                min-height: 50px;\n                max-height: 270px;\n                overflow-y:auto;\n            }\n            \n            .form{\n                display: flex;\n                justify-content: start;\n                height: 30px;\n                align-items: center;\n\n                .textarea{\n                    padding-left: 1rem;\n                    padding-top:1px;\n                    padding-bottom:1px;\n                    padding-right:1px;\n                    width: calc(100% - 30px);\n                    height: 30px;\n                    min-height: 30px;\n                    max-height: 30px;\n                    border:1px solid rgba(0, 0, 0, 0.103);\n                    font-family: 'Hind Siliguri', sans-serif;\n                    outline: none;\n                }\n                .Send{\n                    height: 30px;\n                    width: 30px;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    background: rgba(0, 0, 0, 0.103);\n\n                }\n            }\n\n        }\n\n    }\n</style>"],"sourceRoot":"src/components/Posts"},"metadata":{},"sourceType":"module"}