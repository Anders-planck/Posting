{"ast":null,"code":"import _asyncToGenerator from \"/Users/anders/Desktop/work/Vue/Posting-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"regenerator-runtime/runtime.js\";\nimport { Axios } from \"@/services/axios.js\";\nexport default {\n  RegisterUser: function RegisterUser(data) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              result = null;\n              _context.prev = 1;\n              _context.next = 4;\n              return Axios.post('users', data).then(function (response) {\n                result = response.data;\n              });\n\n            case 4:\n              return _context.abrupt(\"return\", result);\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 7]]);\n    }))();\n  }\n};","map":{"version":3,"sources":["/Users/anders/Desktop/work/Vue/Posting-app/src/services/users.js"],"names":["Axios","RegisterUser","data","result","post","then","response","console","log"],"mappings":";;AAAA,SAAQA,KAAR,QAAoB,qBAApB;AAEA,eAAc;AACJC,EAAAA,YADI,wBACSC,IADT,EACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,cAAAA,MADgB,GACT,IADS;AAAA;AAAA;AAAA,qBAGVH,KAAK,CAACI,IAAN,CAAW,OAAX,EAAmBF,IAAnB,EACLG,IADK,CACA,UAAAC,QAAQ,EAAI;AACdH,gBAAAA,MAAM,GAAEG,QAAQ,CAACJ,IAAjB;AACH,eAHK,CAHU;;AAAA;AAAA,+CAOTC,MAPS;;AAAA;AAAA;AAAA;AAShBI,cAAAA,OAAO,CAACC,GAAR;;AATgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYvB;AAbS,CAAd","sourcesContent":["import {Axios} from \"@/services/axios.js\"\n\nexport default{\n    async RegisterUser(data){\n        let result=null;\n        try {\n            await Axios.post('users',data)\n            .then(response => {\n                result= response.data\n            })\n            return result\n        } catch (error) {\n            console.log(error)\n        }\n    \n    },\n    \n\n}"]},"metadata":{},"sourceType":"module"}