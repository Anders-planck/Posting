{"ast":null,"code":"import _toConsumableArray from \"/Users/anders/Desktop/work/Vue/Posting-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/anders/Desktop/work/Vue/Posting-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Editor from \"@/components/Editor\";\nimport AddIcon from '@/components/Icons/AddIcon';\nimport CloseIcon from '@/components/Icons/CloseIcon';\nimport vue2Dropzone from 'vue2-dropzone';\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css';\nimport { newPost } from '@/services/PostsServices.js';\nimport { required, minLength, numeric, maxLength, email, sameAs } from 'vuelidate/lib/validators';\nexport default {\n  name: 'Form',\n  props: {\n    state: {\n      type: String,\n      require: true\n    },\n    post: {\n      type: Object,\n      require: true\n    }\n  },\n  components: {\n    Editor: Editor,\n    AddIcon: AddIcon,\n    CloseIcon: CloseIcon,\n    vueDropzone: vue2Dropzone\n  },\n  created: function created() {//this.post = newPost()\n  },\n  updated: function updated() {\n    this.post.title = this.$v.title.$model;\n    this.post.title = this.$v.title.$model;\n  },\n  data: function data() {\n    return _objectSpread({\n      //post: null,\n      attachments: [],\n      dropzoneOptions: {\n        url: 'https://httpbin.org/post',\n        maxFilesize: 102400000,\n        // Authentication Headers like Access_Token of your application\n        headers: {\n          Authorization: \"Access Token\"\n        },\n        // The way you want to receive the files in the server\n        paramName: function paramName(n) {\n          return \"file[]\";\n        },\n        dictDefaultMessage: \"Upload Files Here xD\",\n        includeStyling: false,\n        previewsContainer: false,\n        thumbnailWidth: 250,\n        thumbnailHeight: 140,\n        uploadMultiple: true,\n        parallelUploads: 20\n      }\n    }, newPost());\n  },\n  validations: function validations() {\n    return {\n      title: {\n        required: required\n      },\n      description: {\n        required: required\n      }\n    };\n  },\n  methods: {\n    /* inizialize(){\n        if(this.$props.state=='create' && this.$props.post==null){\n            this.post=this.getEmptyPost()\n        }\n    },\n    getEmptyPost(){\n        let post= {\n            online:true,\n            at: '',\n            title: '',\n            description: '',\n            images: [],\n            tags:[],\n        }\n        return post             \n    }, */\n    AddTag: function AddTag() {\n      this.post.tags.push('');\n    },\n    RemoveTag: function RemoveTag(index) {\n      this.post.tags.splice(index, 1);\n    },\n    // AddImage(){\n    //     this.post.images.push('');\n    // },\n    // RemoveImage(index){\n    //     this.post.images.splice(index,1);\n    // },\n    // onFileSelected(event){\n    //     this.post.images[this.post.images.length-1]=event.target.files[0]\n    //     console.log(this.post.images)\n    // },\n    sendingFiles: function sendingFiles(files, xhr, formData) {\n      console.log(\"if you want to change the upload time or add data to the formData you can do it here.\");\n      console.log(\"Files sending\", files);\n      this.attachments = files;\n    },\n    fileAdd: function fileAdd(file) {\n      console.log(\"File Dropped => \", file); // Construct your file object to render in the UI\n\n      var attachment = {};\n      attachment._id = file.upload.uuid;\n      attachment.title = file.name;\n      attachment.type = \"file\";\n      attachment.extension = \".\" + file.type.split(\"/\")[1];\n      attachment.user = JSON.parse(localStorage.getItem(\"user\"));\n      attachment.content = \"File Upload by Select or Drop\";\n      attachment.thumb = file.dataURL;\n      attachment.thumb_list = file.dataURL;\n      attachment.isLoading = true;\n      attachment.progress = null;\n      attachment.size = file.size;\n      this.post.images = [].concat(_toConsumableArray(this.post.images), [attachment]);\n    },\n    uploadProgress: function uploadProgress(file, progress, bytesSent) {\n      console.log(\"File Upload Progress\", progress);\n      this.post.images.map(function (attachment) {\n        if (attachment.title === file.name) {\n          attachment.progress = \"\".concat(Math.floor(progress));\n        }\n      });\n    },\n    success: function success(file, response) {\n      console.log(\"File uploaded successfully\");\n      console.log(\"Response is ->\", response);\n    }\n  }\n};","map":{"version":3,"sources":["Form.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"form\">\n        <div class=\"mb-3 form-group\">\n            <label  v-if=\"$v.title.$model.length==0\" for=\"title\" class=\"label\">\n                Title\n                <span class=\"require\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Your title here... \"\n              name=\"title\"\n              :class=\"{'error': !$v.title.$error}\"\n              v-model.trim=\"$v.title.$model\"\n              class=\"input\" />\n            <ul v-if=\"$v.title.$anyError\" class=\"errorInput\">\n                <li v-if=\"!$v.title.required\"> Please this field is required</li>\n            </ul>\n        </div>\n\n        <div class=\"mb-6 form-group\">\n            <div class=\"fields\">\n                <label for=\"title\" class=\"label\">\n                    Tags\n                </label>\n                <div class=\"add\"  @click=\"AddTag\">\n                    <AddIcon size=\"25px\"/>\n                </div>\n            </div>\n            <transition-group name=\"listTag\" enter-active-class=\"animate__animated animate__backInLeft animate__faster\">\n            <div v-for=\"(tag,index) in post.tags\" :key=\"index\" class=\"fields mt-3 form-group\">\n                <label :for=\"tag\" class=\"label add text-gray-400\">\n                    <span class=\"text-gray-500\">#</span>{{index+1}}\n                </label>\n                <input type=\"text\"  placeholder=\" Your tag...\" v-model=\"post.tags[index]\" class=\"input inputItem \" />\n                <div class=\"add\"  @click=\"RemoveTag(index)\">\n                    <CloseIcon size=\"23px\"/>\n                </div>\n            </div>\n            </transition-group>\n        </div>\n\n        \n        <div class=\"mb-6 form-group\">\n            <label v-if=\"$v.description.$model.length==0\" for=\"Description\" class=\"label\">\n                description\n                <span class=\"require\">*</span>\n            </label>\n            <Editor inputName=\"description\" :post=\"post\" class=\"mt-2 input\"/>\n            <ul v-if=\"$v.description.$anyError\" class=\"errorInput\">\n                <li v-if=\"!$v.description.required\"> Please this field is required</li>\n            </ul>\n        </div>\n\n        \n\n        <div class=\"mb-6 form-group\">\n            <div class=\"fields\">\n                <label for=\"title\" class=\"label\">\n                    Images\n                </label>\n                <!-- <div class=\"add\"  @click=\"AddImage\">\n                    <AddIcon size=\"25px\"/>\n                </div> -->\n            </div>\n\n            <!-- <transition-group name=\"listImage\" enter-active-class=\"animate__animated animate__backInLeft animate__faster\">\n            <div v-for=\"(image,index) in post.images\" :key=\"index\" class=\"fields mt-3 form-group\">\n                <label :for=\"image\" class=\"label add text-gray-400\">\n                    <span class=\"text-gray-500\">#</span>{{index+1}}\n                </label>\n                <input type=\"file\"  class=\"input inputItem\" @change=\"onFileSelected\" />\n                <div class=\"add\"  @click=\"RemoveImage(index)\">\n                    <CloseIcon size=\"23px\"/>\n                </div>\n            </div>\n            </transition-group> -->\n            <vue-dropzone\n              @vdropzone-upload-progress=\"uploadProgress\"\n              :options=\"dropzoneOptions\"\n              @vdropzone-sending-multiple=\"sendingFiles\"\n              @vdropzone-success-multiple=\"success\"\n              ref=\"myVueDropzone\"\n              id=\"dropzone\"\n              @vdropzone-file-added=\"fileAdd\">\n            </vue-dropzone>\n        </div>\n\n        <div class=\"mb-3 form-group checkbox\">\n            <label for=\"online\" class=\"label check\">\n                Online\n                <span class=\"require\">*</span>\n            </label>\n            <input type=\"checkbox\" id=\"online\" name=\"online\"  v-model=\"post.online\" class=\"check\" />\n        </div>\n    </div>\n</template>\n\n<script>\nimport Editor from \"@/components/Editor\"\nimport AddIcon from '@/components/Icons/AddIcon'\nimport CloseIcon from '@/components/Icons/CloseIcon'\nimport vue2Dropzone from 'vue2-dropzone'\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css'\nimport {newPost} from '@/services/PostsServices.js'\nimport {\n    required,\n    minLength,\n    numeric,\n    maxLength,\n    email,\n    sameAs\n} from 'vuelidate/lib/validators'\n\nexport default {\n    name: 'Form',\n    props: {\n        state: {\n            type: String,\n            require: true\n        },\n        post: {\n            type: Object,\n            require: true\n        }\n    },\n    components: {\n        Editor,\n        AddIcon,\n        CloseIcon,\n        vueDropzone: vue2Dropzone\n    },\n    created() {\n        //this.post = newPost()\n    },\n    updated() {\n        this.post.title=this.$v.title.$model\n        this.post.title=this.$v.title.$model\n        \n    },\n    data() {\n        return {\n            //post: null,\n            attachments: [],\n            dropzoneOptions: {\n                url: 'https://httpbin.org/post',\n                maxFilesize: 102400000,\n                // Authentication Headers like Access_Token of your application\n                headers: {\n                    Authorization: `Access Token`\n                },\n                // The way you want to receive the files in the server\n                paramName: function (n) {\n                    return \"file[]\";\n                },\n                dictDefaultMessage: \"Upload Files Here xD\",\n                includeStyling: false,\n                previewsContainer: false,\n                thumbnailWidth: 250,\n                thumbnailHeight: 140,\n                uploadMultiple: true,\n                parallelUploads: 20\n            },\n            ...newPost()\n        }\n    },\n    validations(){\n        return{\n            title:{\n                required\n            },\n            description:{\n                required\n            }\n        }        \n    },\n    methods: {\n        /* inizialize(){\n            if(this.$props.state=='create' && this.$props.post==null){\n                this.post=this.getEmptyPost()\n            }\n        },\n        getEmptyPost(){\n            let post= {\n                online:true,\n                at: '',\n                title: '',\n                description: '',\n                images: [],\n                tags:[],\n            }\n            return post             \n        }, */\n        AddTag() {\n            this.post.tags.push('');\n        },\n        RemoveTag(index) {\n            this.post.tags.splice(index, 1);\n        },\n\n        // AddImage(){\n        //     this.post.images.push('');\n        // },\n        // RemoveImage(index){\n        //     this.post.images.splice(index,1);\n        // },\n        // onFileSelected(event){\n        //     this.post.images[this.post.images.length-1]=event.target.files[0]\n        //     console.log(this.post.images)\n        // },\n\n        sendingFiles(files, xhr, formData) {\n            console.log(\n                \"if you want to change the upload time or add data to the formData you can do it here.\"\n            );\n            console.log(\"Files sending\", files);\n            this.attachments = files\n        },\n\n        fileAdd(file) {\n            console.log(\"File Dropped => \", file);\n            // Construct your file object to render in the UI\n            let attachment = {};\n            attachment._id = file.upload.uuid;\n            attachment.title = file.name;\n            attachment.type = \"file\";\n            attachment.extension = \".\" + file.type.split(\"/\")[1];\n            attachment.user = JSON.parse(localStorage.getItem(\"user\"));\n            attachment.content = \"File Upload by Select or Drop\";\n            attachment.thumb = file.dataURL;\n            attachment.thumb_list = file.dataURL;\n            attachment.isLoading = true;\n            attachment.progress = null;\n            attachment.size = file.size;\n            this.post.images = [...this.post.images, attachment];\n        },\n        uploadProgress(file, progress, bytesSent) {\n            console.log(\"File Upload Progress\", progress);\n            this.post.images.map(attachment => {\n                if (attachment.title === file.name) {\n                    attachment.progress = `${Math.floor(progress)}`;\n                }\n            });\n        },\n        success(file, response) {\n            console.log(\"File uploaded successfully\");\n            console.log(\"Response is ->\", response);\n        }\n    }\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.error {\n    border: 1px solid #c0392b !important;\n}\n\n.form-group{\n    .input {\n        display: block;\n        outline: none;\n        border: 1px solid #d1d8e0;\n        border-radius: 5px;\n        padding: 5px 7px;\n        width: 100%;\n        min-width: auto;\n        font-family: 'Nunito', sans-serif;\n        font-weight: bolder;\n        background: #f1f2f6;\n\n\n        &::placeholder {\n            color: #000 !important;\n            font-weight: bold;\n            font-family: 'Nunito', sans-serif;\n            text-transform: capitalize;\n        }\n\n\n    }\n\n    &:first-child {\n        margin-top: 0 !important;\n    }\n    ul {\n    border: 1px solid #c0392b;\n    border-left: 5px solid #c0392b !important;\n    border-radius: 5px;\n    background: #c03a2b1c;\n    margin-top: 10px;\n    font-style: italic;\n    padding: 3px;\n    width: 100%;\n    text-align: left;\n    color: #ff4757 !important;\n    font-size: 10px;\n    font-weight: bolder;\n\n    li {\n        list-style: none;\n    }\n\n    li>span {\n        font-weight: bolder;\n        font-size: 11px;\n    }\n}\n}\n\n.label {\n    font-family: 'Varela Round', sans-serif;\n    font-weight: 900;\n    margin-bottom: 2px;\n    font-size: 1rem;\n    position: relative;\n    text-transform: capitalize;\n    display: inline-block;\n}\n\n.input {\n    border: 2px solid rgba(0, 0, 0, 0.089);\n    border-radius: 5px !important;\n    padding: 0.5rem;\n    font-family: 'Varela Round', sans-serif;\n    font-size: 1.1rem;\n    width: 100%;\n    display: block;\n}\n\n.inputItem {\n    width: 80% !important;\n}\n\n.require {\n    font-size: 1.3rem;\n    color: #eb2f06;\n    position: absolute;\n    top: -5px;\n    right: -10px;\n}\n\n.textarea {\n    font-family: 'Varela Round', sans-serif;\n}\n\n\n.fields {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n}\n\n.add,\n.close {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 60px;\n    height: 50px;\n    background: rgba(0, 0, 0, 0.048);\n    border-radius: 5px;\n    transition: all 0.3s ease-in-out;\n    cursor: pointer;\n\n    &:hover {\n        transform: scale(1.05);\n    }\n\n    span {\n        display: block;\n    }\n}\n\n.check {\n    margin-right: 20px;\n}\n\n\n</style>"],"sourceRoot":"src/components/Posts/PostCreate"},"metadata":{},"sourceType":"module"}