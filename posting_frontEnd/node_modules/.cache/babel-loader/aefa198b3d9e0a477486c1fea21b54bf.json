{"ast":null,"code":"import { GetAccessInfo, GetUser, RegisterUser, LoginUser } from '@/services/UsersServices.js';\nimport router from '../../router';\nexport default {\n  state: {\n    logged: false,\n    currentUser: null,\n    users: []\n  },\n  mutations: {\n    Register: function Register(state, payload) {\n      state.currentUser = payload;\n      localStorage.setItem('user', JSON.stringify(state.currentUser));\n      router.push('login');\n    },\n    Login: function Login(state, payload) {\n      localStorage.setItem('accessInfo', JSON.stringify(payload));\n      state.logged = GetAccessInfo();\n      router.push('/');\n    },\n    SET_User: function SET_User() {}\n  },\n  actions: {\n    RegisterUser: function RegisterUser(_ref, data) {\n      var commit = _ref.commit;\n      Axios.post('users', data).then(function (response) {\n        commit('Register', response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    LoginUser: function LoginUser(_ref2, data) {\n      var commit = _ref2.commit;\n      Axios.post('auth/login', data).then(function (response) {\n        commit('Login', response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    getUser: function getUser(_ref3) {\n      var commit = _ref3.commit;\n      HTTP.get('/users/' + id, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(function (response) {\n        commit('SET_User', response.data);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  },\n  getters: {\n    getLogged: function getLogged(state) {\n      return state.logged;\n    },\n    getCurrentUser: function getCurrentUser(state) {\n      return state.currentUser;\n    },\n    getUsers: function getUsers(state) {\n      return state.users;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/anders/Desktop/work/Vue/Posting-app/src/store/modules/users.js"],"names":["GetAccessInfo","GetUser","RegisterUser","LoginUser","router","state","logged","currentUser","users","mutations","Register","payload","localStorage","setItem","JSON","stringify","push","Login","SET_User","actions","data","commit","Axios","post","then","response","catch","error","console","log","getUser","HTTP","get","id","headers","token","e","getters","getLogged","getCurrentUser","getUsers"],"mappings":"AAAA,SACIA,aADJ,EAEIC,OAFJ,EAGIC,YAHJ,EAIIC,SAJJ,QAKO,6BALP;AAMA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,eAAe;AACXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE,KADL;AAEHC,IAAAA,WAAW,EAAE,IAFV;AAGHC,IAAAA,KAAK,EAAE;AAHJ,GADI;AAMXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE,kBAACL,KAAD,EAAQM,OAAR,EAAoB;AAC1BN,MAAAA,KAAK,CAACE,WAAN,GAAoBI,OAApB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeV,KAAK,CAACE,WAArB,CAA7B;AACAH,MAAAA,MAAM,CAACY,IAAP,CAAY,OAAZ;AACH,KALM;AAMPC,IAAAA,KAAK,EAAE,eAACZ,KAAD,EAAQM,OAAR,EAAoB;AACvBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAnC;AACAN,MAAAA,KAAK,CAACC,MAAN,GAAeN,aAAa,EAA5B;AACAI,MAAAA,MAAM,CAACY,IAAP,CAAY,GAAZ;AACH,KAVM;AAWPE,IAAAA,QAXO,sBAWG,CAET;AAbM,GANA;AAsBXC,EAAAA,OAAO,EAAE;AACLjB,IAAAA,YADK,8BACiBkB,IADjB,EACuB;AAAA,UAAdC,MAAc,QAAdA,MAAc;AACpBC,MAAAA,KAAK,CAACC,IAAN,CAAW,OAAX,EAAoBH,IAApB,EACCI,IADD,CACM,UAAAC,QAAQ,EAAI;AACdJ,QAAAA,MAAM,CAAC,UAAD,EAAYI,QAAQ,CAACL,IAArB,CAAN;AACH,OAHD,EAICM,KAJD,CAIQ,UAAAC,KAAK,EAAI;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB,OAJrC;AAMP,KARI;AAULxB,IAAAA,SAVK,4BAUgBiB,IAVhB,EAUsB;AAAA,UAAdC,MAAc,SAAdA,MAAc;AACvBC,MAAAA,KAAK,CAACC,IAAN,CAAW,YAAX,EAAyBH,IAAzB,EACCI,IADD,CACM,UAAAC,QAAQ,EAAI;AACdJ,QAAAA,MAAM,CAAC,OAAD,EAASI,QAAQ,CAACL,IAAlB,CAAN;AACH,OAHD,EAICM,KAJD,CAIO,UAAAC,KAAK,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAND;AAOH,KAlBI;AAmBLG,IAAAA,OAnBK,0BAmBY;AAAA,UAART,MAAQ,SAARA,MAAQ;AACbU,MAAAA,IAAI,CAACC,GAAL,CAAS,YAAYC,EAArB,EAAyB;AACrBC,QAAAA,OAAO,EAAE;AACP,2BAAiB,YAAYC;AADtB;AADY,OAAzB,EAKCX,IALD,CAKM,UAAAC,QAAQ,EAAI;AACdJ,QAAAA,MAAM,CAAC,UAAD,EAAYI,QAAQ,CAACL,IAArB,CAAN;AACH,OAPD,EAQCM,KARD,CAQO,UAAAU,CAAC,EAAI;AACRR,QAAAA,OAAO,CAACC,GAAR,CAAYO,CAAZ;AACH,OAVD;AAWH;AA/BI,GAtBE;AAwDXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAE,mBAAAjC,KAAK;AAAA,aAAIA,KAAK,CAACC,MAAV;AAAA,KADX;AAELiC,IAAAA,cAAc,EAAE,wBAAAlC,KAAK;AAAA,aAAIA,KAAK,CAACE,WAAV;AAAA,KAFhB;AAGLiC,IAAAA,QAAQ,EAAE,kBAAAnC,KAAK;AAAA,aAAGA,KAAK,CAACG,KAAT;AAAA;AAHV;AAxDE,CAAf","sourcesContent":["import {\n    GetAccessInfo,\n    GetUser,\n    RegisterUser,\n    LoginUser\n} from '@/services/UsersServices.js'\nimport router from '../../router'\n\nexport default {\n    state: {\n        logged: false,\n        currentUser: null,\n        users: [],\n    },\n    mutations: {\n        Register: (state, payload) => {\n            state.currentUser = payload\n            localStorage.setItem('user', JSON.stringify(state.currentUser))\n            router.push('login')\n        },\n        Login: (state, payload) => {\n            localStorage.setItem('accessInfo', JSON.stringify(payload))\n            state.logged = GetAccessInfo()\n            router.push('/')\n        },\n        SET_User(){\n            \n        }\n\n    },\n    actions: {\n        RegisterUser({commit},data) {\n                Axios.post('users', data)\n                .then(response => {\n                    commit('Register',response.data)\n                })\n                .catch( error => {console.log(error)})\n            \n        },\n\n        LoginUser  ({commit},data) {\n            Axios.post('auth/login', data)\n            .then(response => {\n                commit('Login',response.data)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        },\n        getUser({commit}){\n            HTTP.get('/users/' + id, {\n                headers: {\n                  'Authorization': 'Bearer ' + token\n                }\n            })\n            .then(response => {\n                commit('SET_User',response.data)\n            })\n            .catch(e => {\n                console.log(e)\n            })\n        }\n    },\n\n    getters: {\n        getLogged: state => state.logged,\n        getCurrentUser: state => state.currentUser,\n        getUsers: state=> state.users,\n    },\n}"]},"metadata":{},"sourceType":"module"}