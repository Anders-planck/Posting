{"ast":null,"code":"import _defineProperty from \"/Users/anders/Desktop/work/Vue/Posting-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/anders/Desktop/work/Vue/Posting-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"regenerator-runtime/runtime.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport router from './../router';\nimport status from '@/store/modules/status.js';\nimport users from '@/store/modules/users.js';\nimport posts from '@/store/modules/posts.js';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {},\n  mutations: {\n    nextStep: function nextStep(state) {\n      return state.step++;\n    },\n    backStep: function backStep(state) {\n      return state.step--;\n    },\n    setStep: function setStep(state, payload) {\n      return state.step = payload;\n    },\n    addPost: function addPost(state, payload) {\n      return state.posts.push(payload);\n    },\n    addStatus: function addStatus(state, payload) {\n      return state.status.push(payload);\n    },\n    setCommentPost: function setCommentPost(state, payload) {\n      return state.posts[payload.id].comments.push(payload);\n    },\n    setCommentStatus: function setCommentStatus(state, payload) {\n      return state.status[payload.id].comments.push(payload);\n    },\n    resetPost: function resetPost(state) {\n      return state.post = newPost();\n    },\n    resetStatus: function resetStatus(state) {\n      return state.oneStatus = newStatus();\n    },\n    Register: function () {\n      var _Register = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(state, payload) {\n        var result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return users.RegisterUser(payload);\n\n              case 2:\n                result = _context.sent;\n                state.currentUser = result;\n                localStorage.setItem('user', JSON.stringify(state.currentUser));\n                router.push('login');\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function Register(_x, _x2) {\n        return _Register.apply(this, arguments);\n      }\n\n      return Register;\n    }(),\n    Login: function () {\n      var _Login = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(state, payload) {\n        var result;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return users.LoginUser(payload);\n\n              case 2:\n                result = _context2.sent;\n                console.log(result);\n                localStorage.setItem('accessInfo', JSON.stringify(result));\n                state.logged = GetAccessInfo();\n                router.push('/');\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function Login(_x3, _x4) {\n        return _Login.apply(this, arguments);\n      }\n\n      return Login;\n    }()\n  },\n  actions: {},\n  getters: _defineProperty({\n    getLogged: function getLogged(state) {\n      return state.logged;\n    },\n    getCurrentUser: function getCurrentUser(state) {\n      return state.currentUser;\n    },\n    getPost: function getPost(state) {\n      return state.post;\n    },\n    getStatus: function getStatus(state) {\n      return state.oneStatus;\n    },\n    getPosts: function getPosts(state) {\n      return state.posts;\n    },\n    getStep: function getStep(state) {\n      return state.step;\n    }\n  }, \"getStatus\", function getStatus(state) {\n    return state.status;\n  }),\n  modules: {\n    users: users,\n    posts: posts,\n    status: status\n  }\n});","map":{"version":3,"sources":["/Users/anders/Desktop/work/Vue/Posting-app/src/store/index.js"],"names":["Vue","Vuex","router","status","users","posts","use","Store","state","mutations","nextStep","step","backStep","setStep","payload","addPost","push","addStatus","setCommentPost","id","comments","setCommentStatus","resetPost","post","newPost","resetStatus","oneStatus","newStatus","Register","RegisterUser","result","currentUser","localStorage","setItem","JSON","stringify","Login","LoginUser","console","log","logged","GetAccessInfo","actions","getters","getLogged","getCurrentUser","getPost","getStatus","getPosts","getStep","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport router from './../router'\nimport status from '@/store/modules/status.js' \nimport users from '@/store/modules/users.js'\nimport posts from '@/store/modules/posts.js'\n\nVue.use(Vuex)\n\n\nexport default new Vuex.Store({\n  state: {},\n  mutations: {\n    nextStep: state => state.step++,\n    backStep: state => state.step--,\n    setStep: (state, payload) => (state.step = payload),\n    addPost: (state, payload) => (state.posts.push(payload)),\n    addStatus: (state, payload) => (state.status.push(payload)),\n    setCommentPost: (state, payload) => (state.posts[payload.id].comments.push(payload)),\n    setCommentStatus: (state, payload) => (state.status[payload.id].comments.push(payload)),\n    resetPost: state => state.post = newPost(),\n    resetStatus: state => state.oneStatus = newStatus(),\n    Register: async (state, payload) => {\n    let result = await users.RegisterUser(payload)\n    state.currentUser = result\n     localStorage.setItem('user', JSON.stringify(state.currentUser))\n     router.push('login')\n    },\n    Login: async (state, payload) => {\n      let result = await users.LoginUser(payload)\n      console.log(result)\n      localStorage.setItem('accessInfo', JSON.stringify(result))\n      state.logged=GetAccessInfo()\n      router.push('/')\n\n    }\n  },\n  actions: {},\n  getters: {\n    getLogged: state => state.logged,\n    getCurrentUser: state => state.currentUser,\n    getPost: state => state.post,\n    getStatus: state => state.oneStatus,\n    getPosts: state => state.posts,\n    getStep: state => state.step,\n    getStatus: state => state.status\n  },\n\n  modules: {\n    users,\n    posts,\n    status\n  }\n})"]},"metadata":{},"sourceType":"module"}