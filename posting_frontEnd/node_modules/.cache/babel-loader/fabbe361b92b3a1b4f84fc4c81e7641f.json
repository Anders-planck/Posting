{"ast":null,"code":"import _asyncToGenerator from \"/Users/anders/Desktop/work/Vue/Posting-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { newPost, allPosts, registerPost } from '@/services/PostsServices.js';\nimport router from '../../router';\nimport { HTTP } from '../../services/axios';\nexport default {\n  state: {\n    post: newPost(),\n    posts: allPosts(),\n    step: 1\n  },\n  mutations: {\n    nextStep: function nextStep(state) {\n      return state.step++;\n    },\n    backStep: function backStep(state) {\n      return state.step--;\n    },\n    setStep: function setStep(state, payload) {\n      return state.step = payload;\n    },\n    addPost: function addPost(state, payload) {\n      //state.posts.push(payload)\n      registerPost(payload);\n      var posts = localStorage.getItem('Posts');\n      state.posts = JSON.parse(posts);\n      console.log('state', state);\n      router.push('/');\n    },\n    setCommentPost: function () {\n      var _setCommentPost = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(state, payload) {\n        var user;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                user = localStorage.getItem('accessInfo');\n\n                if (user != 'undefined' && user != null) {\n                  user = JSON.parse(user);\n                }\n\n                _context.next = 4;\n                return HTTP.post('posts/' + payload.post_id + '/comments', {\n                  headers: {\n                    'Authorization': 'Bearer ' + user.token\n                  }\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function setCommentPost(_x, _x2) {\n        return _setCommentPost.apply(this, arguments);\n      }\n\n      return setCommentPost;\n    }(),\n    resetPost: function resetPost(state) {\n      return state.post = newPost();\n    }\n  },\n  actions: {},\n  getters: {\n    getPost: function getPost(state) {\n      return state.post;\n    },\n    getPosts: function getPosts(state) {\n      return state.posts.sort(function (a, b) {\n        return b.id - a.id;\n      });\n    },\n    getStep: function getStep(state) {\n      return state.step;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/anders/Desktop/work/Vue/Posting-app/src/store/modules/posts.js"],"names":["newPost","allPosts","registerPost","router","HTTP","state","post","posts","step","mutations","nextStep","backStep","setStep","payload","addPost","localStorage","getItem","JSON","parse","console","log","push","setCommentPost","user","post_id","headers","token","resetPost","actions","getters","getPost","getPosts","sort","a","b","id","getStep"],"mappings":";;;AAAA,SACIA,OADJ,EAEIC,QAFJ,EAGIC,YAHJ,QAIO,6BAJP;AAKA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,IAAT,QAAqB,sBAArB;AAIA,eAAe;AACXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAEN,OAAO,EADV;AAEHO,IAAAA,KAAK,EAAEN,QAAQ,EAFZ;AAGHO,IAAAA,IAAI,EAAE;AAHH,GADI;AAOXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE,kBAAAL,KAAK;AAAA,aAAIA,KAAK,CAACG,IAAN,EAAJ;AAAA,KADR;AAEPG,IAAAA,QAAQ,EAAE,kBAAAN,KAAK;AAAA,aAAIA,KAAK,CAACG,IAAN,EAAJ;AAAA,KAFR;AAGPI,IAAAA,OAAO,EAAE,iBAACP,KAAD,EAAQQ,OAAR;AAAA,aAAqBR,KAAK,CAACG,IAAN,GAAaK,OAAlC;AAAA,KAHF;AAIPC,IAAAA,OAAO,EAAG,iBAACT,KAAD,EAAQQ,OAAR,EAAoB;AAC1B;AACAX,MAAAA,YAAY,CAACW,OAAD,CAAZ;AACA,UAAIN,KAAK,GAAEQ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX;AACAX,MAAAA,KAAK,CAACE,KAAN,GAAYU,IAAI,CAACC,KAAL,CAAWX,KAAX,CAAZ;AAEAY,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBf,KAApB;AAEAF,MAAAA,MAAM,CAACkB,IAAP,CAAY,GAAZ;AAEH,KAdM;AAePC,IAAAA,cAAc;AAAA,oFAAE,iBAAOjB,KAAP,EAAcQ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AACRU,gBAAAA,IADQ,GACDR,YAAY,CAACC,OAAb,CAAqB,YAArB,CADC;;AAGZ,oBAAIO,IAAI,IAAE,WAAN,IAAqBA,IAAI,IAAE,IAA/B,EAAqC;AACjCA,kBAAAA,IAAI,GAACN,IAAI,CAACC,KAAL,CAAWK,IAAX,CAAL;AACH;;AALW;AAAA,uBAMNnB,IAAI,CAACE,IAAL,CAAU,WAASO,OAAO,CAACW,OAAjB,GAAyB,WAAnC,EAA+C;AACjDC,kBAAAA,OAAO,EAAC;AACJ,qCAAiB,YAAYF,IAAI,CAACG;AAD9B;AADyC,iBAA/C,CANM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAfP;AA2BPC,IAAAA,SAAS,EAAE,mBAAAtB,KAAK;AAAA,aAAIA,KAAK,CAACC,IAAN,GAAaN,OAAO,EAAxB;AAAA;AA3BT,GAPA;AAoCX4B,EAAAA,OAAO,EAAE,EApCE;AAqCXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,iBAAAzB,KAAK;AAAA,aAAIA,KAAK,CAACC,IAAV;AAAA,KADT;AAELyB,IAAAA,QAAQ,EAAE,kBAAA1B,KAAK;AAAA,aAAIA,KAAK,CAACE,KAAN,CAAYyB,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUA,CAAC,CAACC,EAAF,GAAOF,CAAC,CAACE,EAAnB;AAAA,OAAjB,CAAJ;AAAA,KAFV;AAGLC,IAAAA,OAAO,EAAE,iBAAA/B,KAAK;AAAA,aAAIA,KAAK,CAACG,IAAV;AAAA;AAHT;AArCE,CAAf","sourcesContent":["import {\n    newPost,\n    allPosts,\n    registerPost,\n} from '@/services/PostsServices.js'\nimport router from '../../router'\nimport { HTTP } from '../../services/axios'\n\n\n\nexport default {\n    state: {\n        post: newPost(),\n        posts: allPosts(),\n        step: 1,\n    },\n\n    mutations: {\n        nextStep: state => state.step++,\n        backStep: state => state.step--,\n        setStep: (state, payload) => (state.step = payload),\n        addPost:  (state, payload) => {\n            //state.posts.push(payload)\n            registerPost(payload)\n            let posts= localStorage.getItem('Posts')\n            state.posts=JSON.parse(posts)\n\n            console.log('state',state)\n            \n            router.push('/')\n\n        },\n        setCommentPost: async (state, payload) => {\n            let user = localStorage.getItem('accessInfo')\n  \n            if (user!='undefined' && user!=null) {\n                user=JSON.parse(user)\n            }\n            await HTTP.post('posts/'+payload.post_id+'/comments',{\n                headers:{\n                    'Authorization': 'Bearer ' + user.token,\n                }\n            })\n        },\n        resetPost: state => state.post = newPost(),\n    },\n    actions: {},\n    getters: {\n        getPost: state => state.post,\n        getPosts: state => state.posts.sort((a, b) => b.id - a.id),\n        getStep: state => state.step,\n    },\n}\n  "]},"metadata":{},"sourceType":"module"}