{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport { GetAccessInfo, GetUser, RegisterUser, LoginUser } from '@/services/UsersServices.js';\nimport router from '../../router';\nexport default {\n  state: {\n    logged: false,\n    currentUser: null,\n    users: []\n  },\n  mutations: {\n    Register: function Register(state, payload) {\n      state.currentUser = payload;\n      localStorage.setItem('user', JSON.stringify(state.currentUser));\n      router.push('login');\n    },\n    Login: function Login(state, payload) {\n      localStorage.setItem('accessInfo', JSON.stringify(payload));\n      state.logged = GetAccessInfo();\n      router.push('/');\n    },\n    SET_User: function SET_User(state, payload) {\n      state.currentUser = payload;\n    },\n    SET_Logged: function SET_Logged(state, payload) {\n      state.logged = payload;\n    }\n  },\n  actions: {\n    RegisterUser: function RegisterUser(_ref, data) {\n      var commit = _ref.commit;\n      Axios.post('users', data).then(function (response) {\n        commit('Register', response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    LoginUser: function LoginUser(_ref2, data) {\n      var commit = _ref2.commit;\n      Axios.post('auth/login', data).then(function (response) {\n        commit('Login', response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    getUser: function getUser(_ref3) {\n      var commit = _ref3.commit;\n      var accessInfo = localStorage.getItem('accessInfo');\n\n      if (accessInfo != 'undefined' && accessInfo != null) {\n        accessInfo = JSON.parse(accessInfo);\n        HTTP.get('/users/' + accessInfo.user_id, {\n          headers: {\n            'Authorization': 'Bearer ' + accessInfo.token\n          }\n        }).then(function (response) {\n          commit('SET_User', response.data);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    },\n    getLogged: function getLogged(_ref4) {\n      var commit = _ref4.commit;\n      var accessInfo = localStorage.getItem('accessInfo');\n      var state = false;\n\n      if (accessInfo != 'undefined' && accessInfo != null) {\n        accessInfo = JSON.parse(accessInfo);\n        var d = parseInt(accessInfo.exp.split(' ')[0].split('-')[0]);\n        var m = parseInt(accessInfo.exp.split(' ')[0].split('-')[1]);\n        var y = parseInt(accessInfo.exp.split(' ')[0].split('-')[2]);\n        var h = parseInt(accessInfo.exp.split(' ')[1].split(':')[0]);\n        var mm = parseInt(accessInfo.exp.split(' ')[1].split(':')[1]);\n        var exp = new Date(y, m, d, h, mm);\n        var now = new Date();\n\n        if (accessInfo.token != '' && now < exp) {\n          state = true;\n        }\n      }\n    }\n  },\n  getters: {\n    getLogged: function getLogged(state) {\n      return state.logged;\n    },\n    getCurrentUser: function getCurrentUser(state) {\n      return state.currentUser;\n    },\n    getUsers: function getUsers(state) {\n      return state.users;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/anders/Desktop/work/Vue/Posting-app/src/store/modules/users.js"],"names":["GetAccessInfo","GetUser","RegisterUser","LoginUser","router","state","logged","currentUser","users","mutations","Register","payload","localStorage","setItem","JSON","stringify","push","Login","SET_User","SET_Logged","actions","data","commit","Axios","post","then","response","catch","error","console","log","getUser","accessInfo","getItem","parse","HTTP","get","user_id","headers","token","getLogged","d","parseInt","exp","split","m","y","h","mm","Date","now","getters","getCurrentUser","getUsers"],"mappings":"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","sourcesContent":["import {\n    GetAccessInfo,\n    GetUser,\n    RegisterUser,\n    LoginUser\n} from '@/services/UsersServices.js'\nimport router from '../../router'\n\nexport default {\n    state: {\n        logged: false,\n        currentUser: null,\n        users: [],\n    },\n    mutations: {\n        Register: (state, payload) => {\n            state.currentUser = payload\n            localStorage.setItem('user', JSON.stringify(state.currentUser))\n            router.push('login')\n        },\n        Login: (state, payload) => {\n            localStorage.setItem('accessInfo', JSON.stringify(payload))\n            state.logged = GetAccessInfo()\n            router.push('/')\n        },\n        SET_User(state,payload){\n            state.currentUser=payload\n        },\n        SET_Logged(state,payload){\n            state.logged=payload\n        }\n\n    },\n    actions: {\n        RegisterUser({commit},data) {\n            Axios.post('users', data)\n            .then(response => {\n                commit('Register',response.data)\n            })\n            .catch( error => {console.log(error)})\n            \n        },\n\n        LoginUser  ({commit},data) {\n            Axios.post('auth/login', data)\n            .then(response => {\n                commit('Login',response.data)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        },\n        getUser({commit}){\n            let accessInfo = localStorage.getItem('accessInfo')\n\n            if (accessInfo != 'undefined' && accessInfo != null) {\n                accessInfo = JSON.parse(accessInfo)\n            \n                HTTP.get('/users/' + accessInfo.user_id, {\n                    headers: {\n                    'Authorization': 'Bearer ' + accessInfo.token\n                    }\n                })\n                .then(response => {\n                    commit('SET_User',response.data)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n            }\n        },\n        getLogged({commit}){\n            let accessInfo = localStorage.getItem('accessInfo')\n            let state=false;\n            if (accessInfo != 'undefined' && accessInfo != null) {\n                accessInfo = JSON.parse(accessInfo)\n\n                let d=parseInt(accessInfo.exp.split(' ')[0].split('-')[0])\n                let m=parseInt(accessInfo.exp.split(' ')[0].split('-')[1])\n                let y=parseInt(accessInfo.exp.split(' ')[0].split('-')[2])\n                let h=parseInt( accessInfo.exp.split(' ')[1].split(':')[0])\n                let mm=parseInt( accessInfo.exp.split(' ')[1].split(':')[1])\n            \n            \n                let exp =  new Date(y, m, d, h, mm)\n                let now = new Date()\n\n\n                if (accessInfo.token != '' && now < exp) {\n                    state=true\n                }\n            }\n        }\n    },\n\n    getters: {\n        getLogged: state => state.logged,\n        getCurrentUser: state => state.currentUser,\n        getUsers: state=> state.users,\n    },\n}"]},"metadata":{},"sourceType":"module"}