{"ast":null,"code":"import _asyncToGenerator from \"/Users/anders/Desktop/work/Vue/Posting-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { newPost, allPosts, registerPost } from '@/services/PostsServices.js';\nimport router from '../../router';\nexport default {\n  state: {\n    post: newPost(),\n    posts: allPosts(),\n    step: 1\n  },\n  mutations: {\n    nextStep: function nextStep(state) {\n      return state.step++;\n    },\n    backStep: function backStep(state) {\n      return state.step--;\n    },\n    setStep: function setStep(state, payload) {\n      return state.step = payload;\n    },\n    addPost: function () {\n      var _addPost = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(state, payload) {\n        var posts;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return registerPost(payload);\n\n              case 2:\n                posts = localStorage.getItem('Posts');\n                state.posts = JSON.parse(posts);\n                console.log('state', JSON.parse(posts));\n                router.push('/');\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function addPost(_x, _x2) {\n        return _addPost.apply(this, arguments);\n      }\n\n      return addPost;\n    }(),\n    setCommentPost: function setCommentPost(state, payload) {\n      return state.posts[payload.id].comments.push(payload);\n    },\n    resetPost: function resetPost(state) {\n      return state.post = newPost();\n    }\n  },\n  actions: {},\n  getters: {\n    getPost: function getPost(state) {\n      return state.post;\n    },\n    getPosts: function getPosts(state) {\n      return state.posts.sort(function (a, b) {\n        return b.id - a.id;\n      });\n    },\n    getStep: function getStep(state) {\n      return state.step;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/anders/Desktop/work/Vue/Posting-app/src/store/modules/posts.js"],"names":["newPost","allPosts","registerPost","router","state","post","posts","step","mutations","nextStep","backStep","setStep","payload","addPost","localStorage","getItem","JSON","parse","console","log","push","setCommentPost","id","comments","resetPost","actions","getters","getPost","getPosts","sort","a","b","getStep"],"mappings":";;;AAAA,SACIA,OADJ,EAEIC,QAFJ,EAGIC,YAHJ,QAIO,6BAJP;AAKA,OAAOC,MAAP,MAAmB,cAAnB;AAIA,eAAe;AACXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAEL,OAAO,EADV;AAEHM,IAAAA,KAAK,EAAEL,QAAQ,EAFZ;AAGHM,IAAAA,IAAI,EAAE;AAHH,GADI;AAOXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE,kBAAAL,KAAK;AAAA,aAAIA,KAAK,CAACG,IAAN,EAAJ;AAAA,KADR;AAEPG,IAAAA,QAAQ,EAAE,kBAAAN,KAAK;AAAA,aAAIA,KAAK,CAACG,IAAN,EAAJ;AAAA,KAFR;AAGPI,IAAAA,OAAO,EAAE,iBAACP,KAAD,EAAQQ,OAAR;AAAA,aAAqBR,KAAK,CAACG,IAAN,GAAaK,OAAlC;AAAA,KAHF;AAIPC,IAAAA,OAAO;AAAA,6EAAE,iBAAOT,KAAP,EAAcQ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEAV,YAAY,CAACU,OAAD,CAFZ;;AAAA;AAGDN,gBAAAA,KAHC,GAGMQ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAHN;AAILX,gBAAAA,KAAK,CAACE,KAAN,GAAYU,IAAI,CAACC,KAAL,CAAWX,KAAX,CAAZ;AAEAY,gBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBH,IAAI,CAACC,KAAL,CAAWX,KAAX,CAApB;AAEAH,gBAAAA,MAAM,CAACiB,IAAP,CAAY,GAAZ;;AARK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAJA;AAePC,IAAAA,cAAc,EAAE,wBAACjB,KAAD,EAAQQ,OAAR;AAAA,aAAqBR,KAAK,CAACE,KAAN,CAAYM,OAAO,CAACU,EAApB,EAAwBC,QAAxB,CAAiCH,IAAjC,CAAsCR,OAAtC,CAArB;AAAA,KAfT;AAgBPY,IAAAA,SAAS,EAAE,mBAAApB,KAAK;AAAA,aAAIA,KAAK,CAACC,IAAN,GAAaL,OAAO,EAAxB;AAAA;AAhBT,GAPA;AAyBXyB,EAAAA,OAAO,EAAE,EAzBE;AA0BXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,iBAAAvB,KAAK;AAAA,aAAIA,KAAK,CAACC,IAAV;AAAA,KADT;AAELuB,IAAAA,QAAQ,EAAE,kBAAAxB,KAAK;AAAA,aAAIA,KAAK,CAACE,KAAN,CAAYuB,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUA,CAAC,CAACT,EAAF,GAAOQ,CAAC,CAACR,EAAnB;AAAA,OAAjB,CAAJ;AAAA,KAFV;AAGLU,IAAAA,OAAO,EAAE,iBAAA5B,KAAK;AAAA,aAAIA,KAAK,CAACG,IAAV;AAAA;AAHT;AA1BE,CAAf","sourcesContent":["import {\n    newPost,\n    allPosts,\n    registerPost,\n} from '@/services/PostsServices.js'\nimport router from '../../router'\n\n\n\nexport default {\n    state: {\n        post: newPost(),\n        posts: allPosts(),\n        step: 1,\n    },\n\n    mutations: {\n        nextStep: state => state.step++,\n        backStep: state => state.step--,\n        setStep: (state, payload) => (state.step = payload),\n        addPost: async (state, payload) => {\n            //state.posts.push(payload)\n        await    registerPost(payload)\n            let posts= localStorage.getItem('Posts')\n            state.posts=JSON.parse(posts)\n\n            console.log('state',JSON.parse(posts))\n            \n            router.push('/')\n\n        },\n        setCommentPost: (state, payload) => (state.posts[payload.id].comments.push(payload)),\n        resetPost: state => state.post = newPost(),\n    },\n    actions: {},\n    getters: {\n        getPost: state => state.post,\n        getPosts: state => state.posts.sort((a, b) => b.id - a.id),\n        getStep: state => state.step,\n    },\n}\n  "]},"metadata":{},"sourceType":"module"}