{"remainingRequest":"/Users/anders/Desktop/work/Vue/Posting-app/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!/Users/anders/Desktop/work/Vue/Posting-app/src/views/connexion/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/anders/Desktop/work/Vue/Posting-app/src/views/connexion/Login.vue","mtime":1634941952791},{"path":"/Users/anders/Desktop/work/Vue/Posting-app/node_modules/babel-loader/lib/index.js","mtime":1630480653052},{"path":"/Users/anders/Desktop/work/Vue/Posting-app/node_modules/cache-loader/dist/cjs.js","mtime":1630480667405},{"path":"/Users/anders/Desktop/work/Vue/Posting-app/node_modules/@vue/vue-loader-v15/lib/index.js","mtime":1630480667143}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCBDb25uZXhpb24gZnJvbSAnQC9jb21wb25lbnRzL2Nvbm5lY3Rpb24vQ29ubmV4aW9uJwpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOidMb2dpbicsCiAgICBjb21wb25lbnRzOnsKICAgICAgICBDb25uZXhpb24KICAgIH0sCiAgICBjcmVhdGVkKCl7CiAgICAgICAgdGhpcy52ZXJpZmljYXRpb25Mb2dpbigpCiAgICB9LAogICAgY29tcHV0ZWQ6ewogICAgICBpc0xvZ2dlZCgpewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldExvZ2dlZAogICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ2V0TG9nZ2VkJykKICAgIH0sCiAgICBtZXRob2RzOnsKICAgICAgdmVyaWZpY2F0aW9uTG9naW4oKXsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmlzTG9nZ2VkKQogICAgICAgIGlmICh0aGlzLmlzTG9nZ2VkKQogICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy8nKQogICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/connexion","sourcesContent":["<template>\n  <Connexion status=\"login\"/>\n</template>\n\n<script>\nimport Connexion from '@/components/connection/Connexion'\nexport default {\n    name:'Login',\n    components:{\n        Connexion\n    },\n    created(){\n        this.verificationLogin()\n    },\n    computed:{\n      isLogged(){\n        return this.$store.getters.getLogged\n      }\n    },\n    mounted(){\n      this.$store.dispatch('getLogged')\n    },\n    methods:{\n      verificationLogin(){\n        console.log(this.isLogged)\n        if (this.isLogged)\n          this.$router.push('/')\n      }\n    }\n}\n</script>\n\n"]}]}